/**
 *   .       .     ..
 *  _| _  _.*|_  _ ||
 * (_](/,(_.|[_)(/,||
 *
 * DeciBell : A Java Tool for creating and managing relational databases.
 *  DeciBell is a Object - Relation database mapper for java applications providing
 * an easy-to-use interface making it easy for the developer to build a relational
 * database and moreover perform database operations easily!
 *  This project was developed at the Automatic Control Lab in the Chemical Engineering
 * School of the National Technical University of Athens. Please read README for more
 * information.
 *
 * Copyright (C) 2009-2010 Charalampos Chomenides & Pantelis Sopasakis
 *                         kinkyDesign ~ OpenSource Development

 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Contact:
 * hampos Att yahoo d0t c0m
 * chvng att mail D0t ntua dd0T gr
 * Address: Iroon Politechniou St. 9, Zografou, Athens Greece
 * tel. +30 210 7723236
 */
package org.kinkydesign.decibell.db.interfaces;

import org.kinkydesign.decibell.collections.OnModification;
import org.kinkydesign.decibell.collections.SQLType;
import org.kinkydesign.decibell.Component;

/**
 *
 * @author Pantelis Sopasakis
 * @author Charalampos Chomenides
 */
public interface JTableColumn {

    String getColumnName();

    SQLType getColumnType();

    String getConstraint();

    String getDefaultValue();

    String[] getDomain();

    String getForeignKey();

    String getHigh();

    String getLow();

    OnModification getOnDelete();

    OnModification getOnUpdate();

    String getReferenceColumn();

    String getReferenceTable();

    Class<? extends Component> getReferencesClass();

    boolean hasDefault();

    boolean hasDomain();

    boolean hasHigh();

    boolean hasLow();

    boolean isAutoGenerated();

    boolean isConstrained();

    boolean isForeignKey();

    boolean isNotNull();

    boolean isPrimaryKey();

    boolean isUnique();

    void setColumnName(String columnName);

    void setColumnType(SQLType columnType);

    void setDefaultValue(String defaultValue);

    void setDomain(String[] domain);

    void setForeignKey(String TableName, String ForeignColumn, OnModification onDelete, OnModification onUpdate);

    void setHigh(String high);

    void setLow(String low);

    void setNotNull(boolean notNull);

    void setPrimaryKey(boolean isPrimaryKey, boolean isAutoGenerated);

    void setReferencesClass(Class<? extends Component> referencesClass);

    void setUnique(boolean isUnique);

}
